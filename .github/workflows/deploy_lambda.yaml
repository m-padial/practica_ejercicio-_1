name: CI/CD AppRunner

on:
  push:
    branches: [main]

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: intento_terraform
  IMAGE_TAG: latest
  DOCKERFILE_PATH: Dockerfiles/Dockerfile

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Apply (crear solo ECR primero)
      working-directory: terraform
      run: |
        terraform apply -auto-approve \
          -target=aws_ecr_repository.api_repository \
          -var="ecr_repo_name=${{ env.ECR_REPOSITORY }}" \
          -var="image_tag=${{ env.IMAGE_TAG }}"

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image to ECR
      run: |
        IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

        echo "ðŸ“¦ Construyendo imagen Docker..."
        docker build -t $IMAGE_URI -f $DOCKERFILE_PATH .

        echo "ðŸš€ Subiendo imagen a ECR..."
        docker push $IMAGE_URI

        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

    - name: Terraform Apply (completo: App Runner + DynamoDB)
      working-directory: terraform
      run: |
        terraform apply -auto-approve \
          -var="ecr_repo_name=${{ env.ECR_REPOSITORY }}" \
          -var="image_tag=${{ env.IMAGE_TAG }}"
